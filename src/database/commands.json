{
  "strings": {
    "SET": {
      "description": "Sets the value of a key",
      "args": ["key", "value"]
    },
    "SETNX": {
      "description": "Sets the value of a key only if it does not already exist",
      "args": ["key", "value"]
    },
    "GET": {
      "description": "Gets the value of a key",
      "args": ["key"]
    },
    "MGET": {
      "description": "Gets the values of multiple keys",
      "args": ["key1", "key2"]
    },
    "INCR": {
      "description": "Increments the integer value of a key",
      "args": ["key"]
    },
    "INCRBY": {
      "description": "Increments the integer value of a key by a given amount",
      "args": ["key", "increment"]
    },
    "INCRBYFLOAT": {
      "description": "Increments the float value of a key by a given amount",
      "args": ["key", "increment"]
    },
    "APPEND": {
      "description": "Appends a value to a key",
      "args": ["key", "value"]
    },
    "STRLEN": {
      "description": "Gets the length of the value stored in a key",
      "args": ["key"]
    }
  },
  "lists": {
    "LPUSH": {
      "description": "Prepend one or more values to a list",
      "args": ["list", "value1", "value2"]
    },
    "RPUSH": {
      "description": "Append one or more values to a list",
      "args": ["list", "value1", "value2"]
    },
    "LPOP": {
      "description": "Removes and returns the first element of a list",
      "args": ["list"]
    },
    "RPOP": {
      "description": "Removes and returns the last element of a list",
      "args": ["list"]
    },
    "LRANGE": {
      "description": "Gets a range of elements from a list",
      "args": ["list", "start", "stop"]
    },
    "LLEN": {
      "description": "Gets the length of a list",
      "args": ["list"]
    },
    "LMOVE": {
      "description": "Atomically returns and removes the first/last element of the list and pushes it to another list",
      "args": ["source", "destination", "wherefrom", "whereto"]
    },
    "LTRIM": {
      "description": "Trims a list to the specified range",
      "args": ["list", "start", "stop"]
    }
  },
  "sets": {
    "SADD": {
      "description": "Adds one or more members to a set",
      "args": ["set", "member1", "member2"]
    },
    "SREM": {
      "description": "Removes one or more members from a set",
      "args": ["set", "member1", "member2"]
    },
    "SMEMBERS": {
      "description": "Gets all the members in a set",
      "args": ["set"]
    },
    "SISMEMBER": {
      "description": "Checks if a member exists in a set",
      "args": ["set", "member"]
    },
    "SINTER": {
      "description": "Returns the intersection of multiple sets",
      "args": ["set1", "set2"]
    },
    "SUNION": {
      "description": "Returns the union of multiple sets",
      "args": ["set1", "set2"]
    },
    "SDIFF": {
      "description": "Returns the difference between multiple sets",
      "args": ["set1", "set2"]
    },
    "SMOVE": {
      "description": "Moves a member from one set to another",
      "args": ["source", "destination", "member"]
    },
    "SCARD": {
      "description": "Gets the number of members in a set",
      "args": ["set"]
    }
  },
  "hashes": {
    "HSET": {
      "description": "Sets the value of a field in a hash",
      "args": ["hash", "field", "value"]
    },
    "HGET": {
      "description": "Gets the value of a field in a hash",
      "args": ["hash", "field"]
    },
    "HGETALL": {
      "description": "Gets all fields and values in a hash",
      "args": ["hash"]
    },
    "HDEL": {
      "description": "Deletes one or more fields from a hash",
      "args": ["hash", "field1", "field2"]
    },
    "HINCRBY": {
      "description": "Increments the integer value of a field in a hash",
      "args": ["hash", "field", "increment"]
    },
    "HINCRBYFLOAT": {
      "description": "Increments the float value of a field in a hash",
      "args": ["hash", "field", "increment"]
    },
    "HKEYS": {
      "description": "Gets all the fields in a hash",
      "args": ["hash"]
    },
    "HVALS": {
      "description": "Gets all the values in a hash",
      "args": ["hash"]
    }
  },
  "sortedSets": {
    "ZADD": {
      "description": "Adds one or more members to a sorted set, or updates their score",
      "args": ["zset", "score", "member"]
    },
    "ZRANGE": {
      "description": "Gets a range of members in a sorted set",
      "args": ["zset", "start", "stop"]
    },
    "ZREVRANGE": {
      "description": "Gets a range of members in a sorted set, ordered from highest to lowest score",
      "args": ["zset", "start", "stop"]
    },
    "ZREM": {
      "description": "Removes one or more members from a sorted set",
      "args": ["zset", "member1", "member2"]
    },
    "ZRANK": {
      "description": "Gets the rank of a member in a sorted set",
      "args": ["zset", "member"]
    },
    "ZSCORE": {
      "description": "Gets the score of a member in a sorted set",
      "args": ["zset", "member"]
    },
    "ZINCRBY": {
      "description": "Increments the score of a member in a sorted set",
      "args": ["zset", "increment", "member"]
    },
    "ZCARD": {
      "description": "Gets the number of members in a sorted set",
      "args": ["zset"]
    }
  },
  "hyperloglogs": {
    "PFADD": {
      "description": "Adds elements to a HyperLogLog",
      "args": ["hyperloglog", "element1", "element2"]
    },
    "PFCOUNT": {
      "description": "Returns the approximated cardinality of elements in a HyperLogLog",
      "args": ["hyperloglog"]
    }
  },
  "json": {
    "SET": {
      "description": "Sets the JSON value for a given key. Creates the key if it does not exist.",
      "args": ["key", "value"]
    },
    "GET": {
      "description": "Retrieves the JSON value stored at the specified key.",
      "args": ["key"]
    },
    "DEL": {
      "description": "Deletes a specific path in a JSON object, or the entire key if no path is provided.",
      "args": ["key", "path"]
    },
    "TYPE": {
      "description": "Returns the type of the value stored at the specified key or path (e.g., object, array, or primitive).",
      "args": ["key", "path"]
    },
    "ARRAPPEND": {
      "description": "Appends a value to an array in a JSON object at the specified path.",
      "args": ["key", "path", "value"]
    },
    "STRLEN": {
      "description": "Returns the length of a string value in a JSON object at the specified path.",
      "args": ["key", "path"]
    },
    "MGET": {
      "description": "Retrieves the values of multiple JSON keys.",
      "args": ["keys"]
    },
    "OBJKEYS": {
      "description": "Returns the keys of a JSON object at the specified path.",
      "args": ["key", "path"]
    },
    "OBJLEN": {
      "description": "Returns the number of keys in a JSON object at the specified path.",
      "args": ["key", "path"]
    },
    "ARRLEN": {
      "description": "Returns the length of an array in a JSON object at the specified path.",
      "args": ["key", "path"]
    }
  },
  "transactions": {
    "MULTI": {
      "description": "Marks the start of a transaction block",
      "args": []
    },
    "EXEC": {
      "description": "Executes all commands issued after MULTI",
      "args": []
    },
    "DISCARD": {
      "description": "Discard all commands issued after MULTI",
      "args": []
    },
    "WATCH": {
      "description": "Watch one or more keys for modifications",
      "args": ["key1", "key2"]
    }
  },
  "pubsub": {
    "PUBLISH": {
      "description": "Posts a message to a channel",
      "args": ["channel", "message"]
    },
    "SUBSCRIBE": {
      "description": "Subscribes to one or more channels",
      "args": ["channel1", "channel2"]
    },
    "UNSUBSCRIBE": {
      "description": "Unsubscribes from one or more channels",
      "args": ["channel1", "channel2"]
    }
  },
  "keyspace": {
    "DEL": {
      "description": "Deletes one or more keys",
      "args": ["key1", "key2"]
    },
    "EXPIRE": {
      "description": "Sets an expiration time for a key",
      "args": ["key", "seconds"]
    },
    "TTL": {
      "description": "Gets the time to live of a key",
      "args": ["key"]
    },
    "PERSIST": {
      "description": "Removes the expiration time from a key",
      "args": ["key"]
    },
    "RENAME": {
      "description": "Renames a key",
      "args": ["oldkey", "newkey"]
    },
    "COMMAND": {
      "description": "Extra: Do not use",
      "args": []
    },
    "INFO": {
      "description": "Extra: Do not use",
      "args": []
    }
  }
}
